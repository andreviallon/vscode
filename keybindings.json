[
  // Sidebars
  {
    "key": "cmd+r",
    "command": "workbench.action.toggleAuxiliaryBar"
  },

  // Rename Symbol
  {
    "key": "cmd+shift+r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },

  // Pin Buffer
  {
    "key": "alt+p",
    "command": "workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },

  // Terminal
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.killActiveTab",
    "when": "terminalFocus && terminalIsOpen"
  },
  {
    "key": "shift+escape",
    "command": "terminalFocus && workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },


  // Vim

  // Window
  {
    "key": "ctrl-h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl-l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl-k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl-j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "space s h",
    "command": "workbench.action.splitEditor",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space s v",
    "command": "workbench.action.splitEditorDown",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  // Navigation
  {
    "key": "space space",
    "command": "workbench.action.quickOpen",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space /",
    "command": "workbench.action.findInFiles",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space .",
    "command": "workbench.action.showAllEditors",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "/",
    "command": "actions.find",
    "when": "editorFocus && vim.active && vim.mode == 'Normal'"
  },

  // Tree
  {
    "key": "space e",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.files.action.focusFilesExplorer"
      ]
    },
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus"
  },
  {
    "key": "space e",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "when": "sideBarFocus && !inputFocus"
  },
  {
    "key": "space e",
    "when": "vim.mode == 'Normal' && editorTextFocus && foldersViewVisible",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "s",
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift-s",
    "command": "runCommands",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    }
  },
  {
    "key": "enter",
    "command": "explorer.openAndPassFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.toggleExpand",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  },

  // LSP
  {
    "key": "shift-k",
    "command": "editor.action.showHover",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space c a",
    "command": "editor.action.codeAction",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space c r",
    "command": "editor.action.rename",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },

  // Movement
  {
    "key": "ctrl-n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "alt-j",
    "command": "editor.action.moveLinesDownAction",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "key": "alt-k",
    "command": "editor.action.moveLinesUpAction",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },

  // Buffer
  {
    "key": "space b d",
    "command": "workbench.action.closeActiveEditor",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'",
    "key": "shift+h",
    "command": "workbench.action.previousEditor"
  },
  {
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'",
    "key": "shift+l",
    "command": "workbench.action.nextEditor"
  },

  // Goto
  {
    "key": "g d",
    "command": "editor.action.revealDefinition",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "g s",
    "command": "workbench.action.gotoSymbol",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "g r",
    "command": "editor.action.goToReferences",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "g i",
    "command": "editor.action.goToImplementation",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },

  // Git
  {
    "key": "space g g",
    "command": "runCommands",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "args": {
      "commands": ["workbench.view.scm", "workbench.scm.focus"]
    }
  },
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "space g r",
    "command": "git.revertSelectedRanges"
  },
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "space g shift+U",
    "command": "git.clean"
  },
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "space g s",
    "command": "git.stageSelectedRanges"
  },
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "space g u",
    "command": "git.unstageSelectedRanges"
  },
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "space g d",
    "command": "editor.action.dirtydiff.next"
  },
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "[ c",
    "command": "editor.action.dirtydiff.previous"
  },
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "] c",
    "command": "editor.action.dirtydiff.next"
  },
  {
    "key": "space g s",
    "command": "git.stageSelectedRanges",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space g r",
    "command": "git.unstageSelectedRanges",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  // Diagnostics
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "space d d",
    "command": "workbench.actions.view.problems"
  },
  {
    "key": "[ d",
    "command": "editor.action.marker.prev",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "] d",
    "command": "editor.action.marker.next",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  // Test
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "space t shift+t",
    "command": "extension.runJestFile"
  },
  {
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "key": "space t t",
    "command": "extension.runJest"
  }
]
